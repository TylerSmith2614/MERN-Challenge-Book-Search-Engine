{"version":3,"sources":["utils/auth.js","utils/localStorage.js","utils/mutations.js","pages/SearchBooks.js","utils/queries.js","pages/SavedBooks.js","components/SignupForm.js","components/LoginForm.js","components/Navbar.js","App.js","index.js"],"names":["authService","AuthService","_classCallCheck","_createClass","key","value","decode","this","getToken","token","isTokenExpired","exp","Date","now","err","localStorage","getItem","idToken","setItem","window","location","assign","removeItem","removeBookId","bookId","savedBookIds","JSON","parse","updatedSavedBookIds","filter","savedBookId","stringify","LOGIN_USER","gql","_templateObject","_taggedTemplateLiteral","ADD_USER","_templateObject2","SAVE_BOOK","_templateObject3","REMOVE_BOOK","_templateObject4","SearchBooks","_useState","useState","_useState2","_slicedToArray","searchedBooks","setSearchedBooks","_useState3","_useState4","searchInput","setSearchInput","_useState5","_useState6","setSavedBookIds","_useMutation","useMutation","saveBook","useEffect","bookIdArr","length","handleFormSubmit","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","event","response","_yield$response$json","items","bookData","wrap","_context","prev","next","preventDefault","abrupt","fetch","concat","sent","ok","Error","json","console","log","map","book","_book$volumeInfo$imag","id","authors","volumeInfo","title","description","image","imageLinks","thumbnail","link","infoLink","t0","error","stop","_x","apply","arguments","handleSaveBook","_ref2","_callee2","bookToSave","_context2","find","Auth","loggedIn","variables","newBook","_objectSpread","_toConsumableArray","_x2","_jsxs","_Fragment","children","_jsx","Jumbotron","fluid","className","Container","Form","onSubmit","Row","Col","xs","md","Control","name","onChange","e","target","type","size","placeholder","Button","variant","CardColumns","disabled","some","buttonText","Card","border","Img","src","alt","Body","Title","Text","href","rel","onClick","GET_ME","SavedBooks","_useQuery","useQuery","loading","data","_useMutation2","removeBook","userData","theUser","handleDeleteBook","savedBooks","SignupForm","username","email","password","userFormData","setUserFormData","validated","showAlert","setShowAlert","addUser","handleInputChange","_event$target","_defineProperty","_yield$addUser","_data$addUser","user","currentTarget","checkValidity","stopPropagation","login","noValidate","Alert","dismissible","onClose","show","Group","Label","htmlFor","required","Feedback","LoginForm","loginUser","_yield$loginUser","_yield$data$login","AppNavbar","showModal","setShowModal","Navbar","bg","expand","Brand","as","Link","to","Toggle","Collapse","Nav","logout","Modal","onHide","Tab","defaultActiveKey","Header","closeButton","Item","eventKey","Content","Pane","handleModalClose","SignUpForm","httpLink","createHttpLink","uri","authLink","setContext","_","headers","authorization","client","ApolloClient","cache","InMemoryCache","App","ApolloProvider","Router","Routes","Route","path","element","ReactDOM","render","React","StrictMode","document","getElementById"],"mappings":"sVAmDeA,EAHK,IA7CH,oBAAAC,IAAAC,YAAA,KAAAD,EAAA,CAyCd,OAzCcE,YAAAF,EAAA,EAAAG,IAAA,aAAAC,MAEf,WACE,OAAOC,IAAOC,KAAKC,WACrB,GAEA,CAAAJ,IAAA,WAAAC,MACA,WAEE,IAAMI,EAAQF,KAAKC,WACnB,QAASC,IAAUF,KAAKG,eAAeD,EACzC,GAEA,CAAAL,IAAA,iBAAAC,MACA,SAAeI,GACb,IAEE,OADgBH,IAAOG,GACXE,IAAMC,KAAKC,MAAQ,GAGjC,CAAE,MAAOC,GACP,OAAO,CACT,CACF,GAAC,CAAAV,IAAA,WAAAC,MAED,WAEE,OAAOU,aAAaC,QAAQ,WAC9B,GAAC,CAAAZ,IAAA,QAAAC,MAED,SAAMY,GAEJF,aAAaG,QAAQ,WAAYD,GACjCE,OAAOC,SAASC,OAAO,IACzB,GAAC,CAAAjB,IAAA,SAAAC,MAED,WAEEU,aAAaO,WAAW,YAExBH,OAAOC,SAASC,OAAO,IACzB,KAACpB,CAAA,CAzCc,ICaJsB,EAAe,SAACC,GAC3B,IAAMC,EAAeV,aAAaC,QAAQ,eACtCU,KAAKC,MAAMZ,aAAaC,QAAQ,gBAChC,KAEJ,IAAKS,EACH,OAAO,EAGT,IAAMG,EAAkC,OAAZH,QAAY,IAAZA,OAAY,EAAZA,EAAcI,QAAO,SAACC,GAAW,OAAKA,IAAgBN,CAAM,IAGxF,OAFAT,aAAaG,QAAQ,cAAeQ,KAAKK,UAAUH,KAE5C,CACT,E,0BCzBaI,EAAaC,YAAGC,MAAAC,YAAA,mMAahBC,EAAWH,YAAGI,MAAAF,YAAA,iaAuBdG,EAAYL,YAAGM,MAAAJ,YAAA,6QAmBfK,EAAcP,YAAGQ,MAAAN,YAAA,uQ,OCgHfO,EA5JK,WAClB,IAAAC,EAA0CC,mBAAS,IAAGC,EAAAC,YAAAH,EAAA,GAA/CI,EAAaF,EAAA,GAAEG,EAAgBH,EAAA,GACtCI,EAAsCL,mBAAS,IAAGM,EAAAJ,YAAAG,EAAA,GAA3CE,EAAWD,EAAA,GAAEE,EAAcF,EAAA,GAClCG,EAAwCT,mBFjBnB7B,aAAaC,QAAQ,eACtCU,KAAKC,MAAMZ,aAAaC,QAAQ,gBAChC,IEe+DsC,EAAAR,YAAAO,EAAA,GAA5D5B,EAAY6B,EAAA,GAAEC,EAAeD,EAAA,GACpCE,EAAmBC,YAAYnB,GAAxBoB,EAAkCZ,YAAAU,EAAA,GAA1B,GAEfG,qBAAU,WACR,OAAO,WFdgB,IAACC,KEcCnC,GFbboC,OACZ9C,aAAaG,QAAQ,cAAeQ,KAAKK,UAAU6B,IAEnD7C,aAAaO,WAAW,cEUe,CACzC,IAEA,IAAMwC,EAAgB,eAAAC,EAAAC,YAAAC,cAAAC,MAAG,SAAAC,EAAOC,GAAK,IAAAC,EAAAC,EAAAC,EAAAC,EAAA,OAAAP,cAAAQ,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OACZ,GAAvBR,EAAMS,iBAED1B,EAAY,CAADuB,EAAAE,KAAA,eAAAF,EAAAI,OAAA,UACP,GAAK,cAAAJ,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAIWG,MAAM,iDAADC,OACuB7B,IACjD,KAAD,EAFa,IAARkB,EAAQK,EAAAO,MAIAC,GAAG,CAADR,EAAAE,KAAA,cACR,IAAIO,MAAM,yBAAyB,KAAD,SAAAT,EAAAE,KAAA,GAGlBP,EAASe,OAAO,KAAD,GAAAd,EAAAI,EAAAO,KAA/BV,EAAKD,EAALC,MACRc,QAAQC,IAAIf,GACNC,EAAWD,EAAMgB,KAAI,SAACC,GAAI,IAAAC,EAAA,MAAM,CACpCjE,OAAQgE,EAAKE,GACbC,QAASH,EAAKI,WAAWD,SAAW,CAAC,wBACrCE,MAAOL,EAAKI,WAAWC,MACvBC,YAAaN,EAAKI,WAAWE,YAC7BC,OAAiC,QAA1BN,EAAAD,EAAKI,WAAWI,kBAAU,IAAAP,OAAA,EAA1BA,EAA4BQ,YAAa,GAChDC,KAAMV,EAAKI,WAAWO,SACvB,IACDd,QAAQC,IAAId,GAEZxB,EAAiBwB,GACjBpB,EAAe,IAAIsB,EAAAE,KAAA,iBAAAF,EAAAC,KAAA,GAAAD,EAAA0B,GAAA1B,EAAA,SAEnBW,QAAQgB,MAAK3B,EAAA0B,IAAM,yBAAA1B,EAAA4B,OAAA,GAAAnC,EAAA,mBAEtB,gBAjCqBoC,GAAA,OAAAxC,EAAAyC,MAAA,KAAAC,UAAA,KAmChBC,EAAc,eAAAC,EAAA3C,YAAAC,cAAAC,MAAG,SAAA0C,EAAOpF,GAAM,IAAAqF,EAAA,OAAA5C,cAAAQ,MAAA,SAAAqC,GAAA,cAAAA,EAAAnC,KAAAmC,EAAAlC,MAAA,OAGqB,GAFjDiC,EAAa9D,EAAcgE,MAAK,SAACvB,GAAI,OAAKA,EAAKhE,SAAWA,CAAM,IAExDwF,EAAKC,WAAaD,EAAKxG,WAAa,KAEvC,CAADsG,EAAAlC,KAAA,eAAAkC,EAAAhC,OAAA,UACD,GAAK,cAAAgC,EAAAnC,KAAA,EAAAmC,EAAAlC,KAAA,EAINlB,EAAS,CACbwD,UAAW,CAAEC,QAAOC,YAAA,GAAOP,MAC1B,KAAD,EAEFtD,EAAgB,GAADyB,OAAAqC,YAAK5F,GAAY,CAAEoF,EAAWrF,UAASsF,EAAAlC,KAAA,iBAAAkC,EAAAnC,KAAA,GAAAmC,EAAAV,GAAAU,EAAA,SAEtDzB,QAAQgB,MAAKS,EAAAV,IAAM,yBAAAU,EAAAR,OAAA,GAAAM,EAAA,mBAEtB,gBAlBmBU,GAAA,OAAAX,EAAAH,MAAA,KAAAC,UAAA,KAoBpB,OACEc,eAAAC,WAAA,CAAAC,SAAA,CACEC,cAACC,IAAS,CAACC,OAAK,EAACC,UAAU,qBAAoBJ,SAC7CF,eAACO,IAAS,CAAAL,SAAA,CACRC,cAAA,MAAAD,SAAI,sBACJC,cAACK,IAAI,CAACC,SAAUlE,EAAiB2D,SAC/BF,eAACQ,IAAKE,IAAG,CAAAR,SAAA,CACPC,cAACQ,IAAG,CAACC,GAAI,GAAIC,GAAI,EAAEX,SACjBC,cAACK,IAAKM,QAAO,CACXC,KAAK,cACLjI,MAAO8C,EACPoF,SAAU,SAACC,GAAC,OAAKpF,EAAeoF,EAAEC,OAAOpI,MAAM,EAC/CqI,KAAK,OACLC,KAAK,KACLC,YAAY,wBAGhBlB,cAACQ,IAAG,CAACC,GAAI,GAAIC,GAAI,EAAEX,SACjBC,cAACmB,IAAM,CAACH,KAAK,SAASI,QAAQ,UAAUH,KAAK,KAAIlB,SAAC,8BAS5DF,eAACO,IAAS,CAAAL,SAAA,CACRC,cAAA,MAAAD,SACG1E,EAAcc,OAAM,WAAAmB,OACNjC,EAAcc,OAAM,aAC/B,+BAEN6D,cAACqB,IAAW,CAAAtB,SACT1E,EAAcwC,KAAI,SAACC,GAClB,IAAMwD,EAAuB,OAAZvH,QAAY,IAAZA,OAAY,EAAZA,EAAcwH,MAC7B,SAACnH,GAAW,OAAKA,IAAgB0D,EAAKhE,MAAM,IAE1C0H,EAAa,GAQjB,OALEA,EADEF,EACW,4BAEA,kBAIbzB,eAAC4B,IAAI,CAAmBC,OAAO,OAAM3B,SAAA,CAClCjC,EAAKO,MACJ2B,cAACyB,IAAKE,IAAG,CACPC,IAAK9D,EAAKO,MACVwD,IAAG,iBAAAvE,OAAmBQ,EAAKK,OAC3BiD,QAAQ,QAER,KACJvB,eAAC4B,IAAKK,KAAI,CAAA/B,SAAA,CACRC,cAACyB,IAAKM,MAAK,CAAAhC,SAAEjC,EAAKK,QAClB0B,eAAA,KAAGM,UAAU,QAAOJ,SAAA,CAAC,YAAUjC,EAAKG,WACpC4B,eAAC4B,IAAKO,KAAI,CAAAjC,SAAA,CACPjC,EAAKM,YACLN,EAAKU,MACJwB,cAAA,KAAAD,SACEC,cAAA,KACEiC,KAAMnE,EAAKU,KACXuC,OAAO,SACPmB,IAAI,sBAAqBnC,SAC1B,8BAMNT,EAAKC,YACJS,cAACmB,IAAM,CACLG,SAAUA,EACVnB,UAAU,qBACVgC,QAAS,kBAAMnD,EAAelB,EAAKhE,OAAO,EAACiG,SAE1CyB,SA/BE1D,EAAKhE,OAqCpB,WAKV,E,SCrKasI,EAAS7H,YAAGC,MAAAC,YAAA,kOCsFV4H,EA5EI,WACjB,IAAAC,EAA0BC,YAASH,GAA3BI,EAAOF,EAAPE,QAASC,EAAIH,EAAJG,KACjB3G,EAAgCC,YAAYjB,GAAY4H,EAAAtH,YAAAU,EAAA,GAAjD6G,EAAUD,EAAA,GAAI/D,EAAK+D,EAAA,GAAL/D,MAEfiE,GAAe,OAAJH,QAAI,IAAJA,OAAI,EAAJA,EAAMI,UAAW,CAAC,EAE7BC,EAAgB,eAAAzG,EAAAC,YAAAC,cAAAC,MAAG,SAAAC,EAAO3C,GAAM,IAAA6C,EAAA,OAAAJ,cAAAQ,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OACmB,GAAzCoC,EAAKC,WAAaD,EAAKxG,WAAa,KAEvC,CAADkE,EAAAE,KAAA,eAAAF,EAAAI,OAAA,UACD,GAAK,cAAAJ,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAIWyF,EAAW,CAAEnD,UAAW,CAAE1F,YAAY,KAAD,EAAtD6C,EAAQK,EAAAO,KACdI,QAAQC,IAAI,mBAAoBjB,GAE5BgC,GACFhB,QAAQC,IAAIe,GAGd9E,EAAaC,GAASkD,EAAAE,KAAA,iBAAAF,EAAAC,KAAA,GAAAD,EAAA0B,GAAA1B,EAAA,SAEtBW,QAAQgB,MAAK3B,EAAA0B,IAAM,yBAAA1B,EAAA4B,OAAA,GAAAnC,EAAA,mBAEtB,gBAnBqBoC,GAAA,OAAAxC,EAAAyC,MAAA,KAAAC,UAAA,KAsBtB,OAAIyD,EACKxC,cAAA,MAAAD,SAAI,eAGTF,eAAAC,WAAA,CAAAC,SAAA,CACEC,cAACC,IAAS,CAACC,OAAK,EAACC,UAAU,qBAAoBJ,SAC7CC,cAACI,IAAS,CAAAL,SACRC,cAAA,MAAAD,SAAI,6BAGRF,eAACO,IAAS,CAAAL,SAAA,CACRC,cAAA,MAAAD,SACG6C,EAASG,WAAW5G,OAAM,WAAAmB,OACZsF,EAASG,WAAW5G,OAAM,WAAAmB,OACJ,IAA/BsF,EAASG,WAAW5G,OAAe,OAAS,QAAO,KAErD,6BAEN6D,cAACqB,IAAW,CAAAtB,SACT6C,EAASG,WAAWlF,KAAI,SAACC,GAAI,OAC5B+B,eAAC4B,IAAI,CAAmBC,OAAO,OAAM3B,SAAA,CAClCjC,EAAKO,MACJ2B,cAACyB,IAAKE,IAAG,CACPC,IAAK9D,EAAKO,MACVwD,IAAG,iBAAAvE,OAAmBQ,EAAKK,OAC3BiD,QAAQ,QAER,KACJvB,eAAC4B,IAAKK,KAAI,CAAA/B,SAAA,CACRC,cAACyB,IAAKM,MAAK,CAAAhC,SAAEjC,EAAKK,QAClB0B,eAAA,KAAGM,UAAU,QAAOJ,SAAA,CAAC,YAAUjC,EAAKG,WACpC+B,cAACyB,IAAKO,KAAI,CAAAjC,SAAEjC,EAAKM,cACjB4B,cAACmB,IAAM,CACLhB,UAAU,uBACVgC,QAAS,kBAAMW,EAAiBhF,EAAKhE,OAAO,EAACiG,SAC9C,2BAfMjC,EAAKhE,OAmBT,WAOrB,E,qDC6CekJ,EA9HI,WAEjB,IAAA/H,EAAwCC,mBAAS,CAC/C+H,SAAU,GACVC,MAAO,GACPC,SAAU,KACVhI,EAAAC,YAAAH,EAAA,GAJKmI,EAAYjI,EAAA,GAAEkI,EAAelI,EAAA,GAMpCI,EAAoBL,oBAAS,GAAtBoI,EAA4BlI,YAAAG,EAAA,GAAnB,GAEhBI,EAAkCT,oBAAS,GAAMU,EAAAR,YAAAO,EAAA,GAA1C4H,EAAS3H,EAAA,GAAE4H,EAAY5H,EAAA,GAG9BE,EAAkBC,YAAYrB,GAAvB+I,EAAgCrI,YAAAU,EAAA,GAAzB,GAER4H,EAAoB,SAAChH,GACzB,IAAAiH,EAAwBjH,EAAMqE,OAAtBH,EAAI+C,EAAJ/C,KAAMjI,EAAKgL,EAALhL,MACd0K,EAAe3D,wBAAC,CAAC,EAAI0D,GAAY,GAAAQ,YAAA,GAAGhD,EAAOjI,IAC7C,EAEMyD,EAAgB,eAAAC,EAAAC,YAAAC,cAAAC,MAAG,SAAAC,EAAOC,GAAK,IAAAmH,EAAApB,EAAAqB,EAAA/K,EAAAgL,EAAA,OAAAxH,cAAAQ,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAQlC,OAPDR,EAAMS,kBAIuB,IADhBT,EAAMsH,cACVC,kBACPvH,EAAMS,iBACNT,EAAMwH,mBACPlH,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAGwBuG,EAAQ,CAC7BjE,UAASE,YAAA,GAAO0D,KACf,KAAD,EAAAS,EAAA7G,EAAAO,KAFMkF,EAAIoB,EAAJpB,KAAIqB,EAIYrB,EAAKgB,QAArB1K,EAAK+K,EAAL/K,MAAOgL,EAAID,EAAJC,KACfpG,QAAQC,IAAImG,GACZzE,EAAK6E,MAAMpL,GAAOiE,EAAAE,KAAA,iBAAAF,EAAAC,KAAA,GAAAD,EAAA0B,GAAA1B,EAAA,SAElBW,QAAQgB,MAAK3B,EAAA0B,IACb8E,GAAa,GAAM,QAGrBH,EAAgB,CACdJ,SAAU,GACVC,MAAO,GACPC,SAAU,KACT,yBAAAnG,EAAA4B,OAAA,GAAAnC,EAAA,mBACJ,gBA5BqBoC,GAAA,OAAAxC,EAAAyC,MAAA,KAAAC,UAAA,KA8BtB,OACEiB,cAAAF,WAAA,CAAAC,SAEEF,eAACQ,IAAI,CAAC+D,YAAU,EAACd,UAAWA,EAAWhD,SAAUlE,EAAiB2D,SAAA,CAEhEC,cAACqE,IAAK,CACJC,aAAW,EACXC,QAAS,kBAAMf,GAAa,EAAM,EAClCgB,KAAMjB,EACNnC,QAAQ,SAAQrB,SACjB,2CAIDF,eAACQ,IAAKoE,MAAK,CAAA1E,SAAA,CACTC,cAACK,IAAKqE,MAAK,CAACC,QAAQ,WAAU5E,SAAC,aAC/BC,cAACK,IAAKM,QAAO,CACXK,KAAK,OACLE,YAAY,gBACZN,KAAK,WACLC,SAAU6C,EACV/K,MAAOyK,EAAaH,SACpB2B,UAAQ,IAEV5E,cAACK,IAAKM,QAAQkE,SAAQ,CAAC7D,KAAK,UAASjB,SAAC,6BAKxCF,eAACQ,IAAKoE,MAAK,CAAA1E,SAAA,CACTC,cAACK,IAAKqE,MAAK,CAACC,QAAQ,QAAO5E,SAAC,UAC5BC,cAACK,IAAKM,QAAO,CACXK,KAAK,QACLE,YAAY,qBACZN,KAAK,QACLC,SAAU6C,EACV/K,MAAOyK,EAAaF,MACpB0B,UAAQ,IAEV5E,cAACK,IAAKM,QAAQkE,SAAQ,CAAC7D,KAAK,UAASjB,SAAC,0BAKxCF,eAACQ,IAAKoE,MAAK,CAAA1E,SAAA,CACTC,cAACK,IAAKqE,MAAK,CAACC,QAAQ,WAAU5E,SAAC,aAC/BC,cAACK,IAAKM,QAAO,CACXK,KAAK,WACLE,YAAY,gBACZN,KAAK,WACLC,SAAU6C,EACV/K,MAAOyK,EAAaD,SACpByB,UAAQ,IAEV5E,cAACK,IAAKM,QAAQkE,SAAQ,CAAC7D,KAAK,UAASjB,SAAC,6BAIxCC,cAACmB,IAAM,CACLG,WAEI8B,EAAaH,UACbG,EAAaF,OACbE,EAAaD,UAGjBnC,KAAK,SACLI,QAAQ,UAASrB,SAClB,eAMT,ECxBe+E,EApGG,WAChB,IAAA7J,EAAwCC,mBAAS,CAAEgI,MAAO,GAAIC,SAAU,KAAKhI,EAAAC,YAAAH,EAAA,GAAtEmI,EAAYjI,EAAA,GAAEkI,EAAelI,EAAA,GACpCI,EAAoBL,oBAAS,GAAtBoI,EAA4BlI,YAAAG,EAAA,GAAnB,GAChBI,EAAkCT,oBAAS,GAAMU,EAAAR,YAAAO,EAAA,GAA1C4H,EAAS3H,EAAA,GAAE4H,EAAY5H,EAAA,GAC9BE,EAA+BC,YAAYzB,GAAWoI,EAAAtH,YAAAU,EAAA,GAA/CiJ,EAASrC,EAAA,GAAI/D,EAAK+D,EAAA,GAAL/D,MACpB1C,qBAAU,WAENuH,IADE7E,EAKN,GAAG,CAACA,IAEJ,IAAM+E,EAAoB,SAAChH,GACzB,IAAAiH,EAAwBjH,EAAMqE,OAAtBH,EAAI+C,EAAJ/C,KAAMjI,EAAKgL,EAALhL,MACd0K,EAAe3D,wBAAC,CAAC,EAAI0D,GAAY,GAAAQ,YAAA,GAAGhD,EAAOjI,IAC7C,EAEMyD,EAAgB,eAAAC,EAAAC,YAAAC,cAAAC,MAAG,SAAAC,EAAOC,GAAK,IAAAsI,EAAAvC,EAAAwC,EAAAlM,EAAAgL,EAAA,OAAAxH,cAAAQ,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAQlC,OAPDR,EAAMS,kBAIuB,IADhBT,EAAMsH,cACVC,kBACPvH,EAAMS,iBACNT,EAAMwH,mBACPlH,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAGwB6H,EAAU,CAC/BvF,UAASE,YAAA,GAAO0D,KACf,KAAD,EAFU,OAEV4B,EAAAhI,EAAAO,KAFMkF,EAAIuC,EAAJvC,KAAIzF,EAAAE,KAAA,GAIkBuF,EAAK0B,MAAM,KAAD,GAAAc,EAAAjI,EAAAO,KAAhCxE,EAAKkM,EAALlM,MAAOgL,EAAIkB,EAAJlB,KACfpG,QAAQC,IAAImG,GACZzE,EAAK6E,MAAMpL,GAAOiE,EAAAE,KAAA,iBAAAF,EAAAC,KAAA,GAAAD,EAAA0B,GAAA1B,EAAA,SAElBW,QAAQgB,MAAK3B,EAAA0B,IACb8E,GAAa,GAAM,QAGrBH,EAAgB,CACdJ,SAAU,GACVC,MAAO,GACPC,SAAU,KACT,yBAAAnG,EAAA4B,OAAA,GAAAnC,EAAA,mBACJ,gBA5BqBoC,GAAA,OAAAxC,EAAAyC,MAAA,KAAAC,UAAA,KA8BtB,OACEiB,cAAAF,WAAA,CAAAC,SACEF,eAACQ,IAAI,CAAC+D,YAAU,EAACd,UAAWA,EAAWhD,SAAUlE,EAAiB2D,SAAA,CAChEC,cAACqE,IAAK,CACJC,aAAW,EACXC,QAAS,kBAAMf,GAAa,EAAM,EAClCgB,KAAMjB,EACNnC,QAAQ,SAAQrB,SACjB,sDAGDF,eAACQ,IAAKoE,MAAK,CAAA1E,SAAA,CACTC,cAACK,IAAKqE,MAAK,CAACC,QAAQ,QAAO5E,SAAC,UAC5BC,cAACK,IAAKM,QAAO,CACXK,KAAK,OACLE,YAAY,aACZN,KAAK,QACLC,SAAU6C,EACV/K,MAAOyK,EAAaF,MACpB0B,UAAQ,IAEV5E,cAACK,IAAKM,QAAQkE,SAAQ,CAAC7D,KAAK,UAASjB,SAAC,0BAKxCF,eAACQ,IAAKoE,MAAK,CAAA1E,SAAA,CACTC,cAACK,IAAKqE,MAAK,CAACC,QAAQ,WAAU5E,SAAC,aAC/BC,cAACK,IAAKM,QAAO,CACXK,KAAK,WACLE,YAAY,gBACZN,KAAK,WACLC,SAAU6C,EACV/K,MAAOyK,EAAaD,SACpByB,UAAQ,IAEV5E,cAACK,IAAKM,QAAQkE,SAAQ,CAAC7D,KAAK,UAASjB,SAAC,6BAIxCC,cAACmB,IAAM,CACLG,WAAY8B,EAAaF,OAASE,EAAaD,UAC/CnC,KAAK,SACLI,QAAQ,UAASrB,SAClB,eAMT,EC7BemF,EApEG,WAEhB,IAAAjK,EAAkCC,oBAAS,GAAMC,EAAAC,YAAAH,EAAA,GAA1CkK,EAAShK,EAAA,GAAEiK,EAAYjK,EAAA,GAE9B,OACE0E,eAAAC,WAAA,CAAAC,SAAA,CACEC,cAACqF,IAAM,CAACC,GAAG,OAAOlE,QAAQ,OAAOmE,OAAO,KAAIxF,SAC1CF,eAACO,IAAS,CAACF,OAAK,EAAAH,SAAA,CACdC,cAACqF,IAAOG,MAAK,CAACC,GAAIC,IAAMC,GAAG,IAAG5F,SAAC,wBAG/BC,cAACqF,IAAOO,OAAM,CAAC,gBAAc,WAC7B5F,cAACqF,IAAOQ,SAAQ,CAAC7H,GAAG,SAAQ+B,SAC1BF,eAACiG,IAAG,CAAC3F,UAAU,UAASJ,SAAA,CACtBC,cAAC8F,IAAIJ,KAAI,CAACD,GAAIC,IAAMC,GAAG,IAAG5F,SAAC,qBAI1BT,EAAKC,WACJM,eAAAC,WAAA,CAAAC,SAAA,CACEC,cAAC8F,IAAIJ,KAAI,CAACD,GAAIC,IAAMC,GAAG,SAAQ5F,SAAC,mBAGhCC,cAAC8F,IAAIJ,KAAI,CAACvD,QAAS7C,EAAKyG,OAAOhG,SAAC,cAGlCC,cAAC8F,IAAIJ,KAAI,CAACvD,QAAS,kBAAMiD,GAAa,EAAK,EAACrF,SAAC,4BAOvDC,cAACgG,IAAK,CACJ/E,KAAK,KACLuD,KAAMW,EACNc,OAAQ,kBAAMb,GAAa,EAAM,EACjC,kBAAgB,eAAcrF,SAE9BF,eAACqG,IAAI9F,UAAS,CAAC+F,iBAAiB,QAAOpG,SAAA,CACrCC,cAACgG,IAAMI,OAAM,CAACC,aAAW,EAAAtG,SACvBC,cAACgG,IAAMjE,MAAK,CAAC/D,GAAG,eAAc+B,SAC5BF,eAACiG,IAAG,CAAC1E,QAAQ,QAAOrB,SAAA,CAClBC,cAAC8F,IAAIQ,KAAI,CAAAvG,SACPC,cAAC8F,IAAIJ,KAAI,CAACa,SAAS,QAAOxG,SAAC,YAE7BC,cAAC8F,IAAIQ,KAAI,CAAAvG,SACPC,cAAC8F,IAAIJ,KAAI,CAACa,SAAS,SAAQxG,SAAC,qBAKpCC,cAACgG,IAAMlE,KAAI,CAAA/B,SACTF,eAACqG,IAAIM,QAAO,CAAAzG,SAAA,CACVC,cAACkG,IAAIO,KAAI,CAACF,SAAS,QAAOxG,SACxBC,cAAC8E,EAAS,CAAC4B,iBAAkB,kBAAMtB,GAAa,EAAM,MAExDpF,cAACkG,IAAIO,KAAI,CAACF,SAAS,SAAQxG,SACzBC,cAAC2G,EAAU,CAACD,iBAAkB,kBAAMtB,GAAa,EAAM,kBAQvE,E,iDC5DMwB,GAAWC,YAAe,CAC9BC,IAAK,aAEDC,GAAWC,cAAW,SAACC,EAAC5K,GAAmB,IAAf6K,EAAO7K,EAAP6K,QAC1BnO,EAAQM,aAAaC,QAAQ,YACnC,MAAO,CACL4N,QAAOxH,wBAAA,GACFwH,GAAO,IACVC,cAAepO,EAAK,UAAAuE,OAAavE,GAAU,KAGjD,IAEMqO,GAAS,IAAIC,KAAa,CAC9B7I,KAAMuI,GAASzJ,OAAOsJ,IACtBU,MAAO,IAAIC,OAuBEC,OApBf,WACE,OACExH,cAACyH,KAAc,CAACL,OAAQA,GAAOrH,SAC7BC,cAAC0H,IAAM,CAAA3H,SACLF,eAAAC,WAAA,CAAAC,SAAA,CACEC,cAACqF,EAAM,IACPxF,eAAC8H,IAAM,CAAA5H,SAAA,CACLC,cAAC4H,IAAK,CAACC,KAAK,IAAIC,QAAS9H,cAAChF,EAAW,MACrCgF,cAAC4H,IAAK,CAACC,KAAK,SAASC,QAAS9H,cAACqC,EAAU,MACzCrC,cAAC4H,IAAK,CACJC,KAAK,IACLC,QAAS9H,cAAA,MAAIG,UAAU,YAAWJ,SAAC,2BAOjD,EC5CAgI,IAASC,OACPhI,cAACiI,IAAMC,WAAU,CAAAnI,SACfC,cAACwH,GAAG,MAENW,SAASC,eAAe,Q","file":"static/js/main.6b91a6b5.chunk.js","sourcesContent":["// src/utils/auth.js\nimport decode from \"jwt-decode\";\n\nclass AuthService {\n  // get user data\n  getProfile() {\n    return decode(this.getToken());\n  }\n\n  // check if user's logged in\n  loggedIn() {\n    // Checks if there is a saved token and it's still valid\n    const token = this.getToken();\n    return !!token && !this.isTokenExpired(token); // handwaiving here\n  }\n\n  // check if token is expired\n  isTokenExpired(token) {\n    try {\n      const decoded = decode(token);\n      if (decoded.exp < Date.now() / 1000) {\n        return true;\n      } else return false;\n    } catch (err) {\n      return false;\n    }\n  }\n\n  getToken() {\n    // Retrieves the user token from localStorage\n    return localStorage.getItem(\"id_token\");\n  }\n\n  login(idToken) {\n    // Saves user token to localStorage\n    localStorage.setItem(\"id_token\", idToken);\n    window.location.assign(\"/\");\n  }\n\n  logout() {\n    // Clear user token and profile data from localStorage\n    localStorage.removeItem(\"id_token\");\n    // this will reload the page and reset the state of the application\n    window.location.assign(\"/\");\n  }\n}\n\n// Create an instance of the AuthService class\nconst authService = new AuthService();\n\n// Export the created instance as the default module\nexport default authService;\n","export const getSavedBookIds = () => {\n  const savedBookIds = localStorage.getItem('saved_books')\n    ? JSON.parse(localStorage.getItem('saved_books'))\n    : [];\n\n  return savedBookIds;\n};\n\nexport const saveBookIds = (bookIdArr) => {\n  if (bookIdArr.length) {\n    localStorage.setItem('saved_books', JSON.stringify(bookIdArr));\n  } else {\n    localStorage.removeItem('saved_books');\n  }\n};\n\nexport const removeBookId = (bookId) => {\n  const savedBookIds = localStorage.getItem('saved_books')\n    ? JSON.parse(localStorage.getItem('saved_books'))\n    : null;\n\n  if (!savedBookIds) {\n    return false;\n  }\n\n  const updatedSavedBookIds = savedBookIds?.filter((savedBookId) => savedBookId !== bookId);\n  localStorage.setItem('saved_books', JSON.stringify(updatedSavedBookIds));\n\n  return true;\n};\n","\r\nimport { gql } from '@apollo/client';\r\n\r\n\r\nexport const LOGIN_USER = gql`\r\n  mutation login($email: String!, $password: String!) {\r\n    login(email: $email, password: $password) {\r\n      token\r\n      user {\r\n        _id\r\n        username\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\n\r\nexport const ADD_USER = gql`\r\n  mutation addUser($username: String!, $email: String!, $password: String!) {\r\n    addUser(username: $username, email: $email, password: $password) {\r\n      token\r\n      user {\r\n        _id\r\n        username\r\n        email\r\n        bookCount\r\n        savedBooks {\r\n          authors\r\n          bookId\r\n          image\r\n          link\r\n          title\r\n          description\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\n\r\nexport const SAVE_BOOK = gql`\r\n  mutation saveBook($newBook: InputBook!) {\r\n    saveBook(newBook: $newBook) {\r\n      _id\r\n      username\r\n      email\r\n      savedBooks {\r\n        bookId\r\n        authors\r\n        description\r\n        title\r\n        image\r\n        link\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\n\r\nexport const REMOVE_BOOK = gql`\r\n  mutation removeBook($bookId: ID!) {\r\n    removeBook(bookId: $bookId) {\r\n      _id\r\n      username\r\n      email\r\n      savedBooks {\r\n        bookId\r\n        authors\r\n        description\r\n        title\r\n        image\r\n        link\r\n      }\r\n    }\r\n  }\r\n`;\r\n","import React, { useState, useEffect } from \"react\";\nimport {\n  Jumbotron,\n  Container,\n  Col,\n  Form,\n  Button,\n  Card,\n  CardColumns,\n} from \"react-bootstrap\";\nimport Auth from \"../utils/auth\";\nimport { saveBookIds, getSavedBookIds } from \"../utils/localStorage\";\nimport { useMutation } from \"@apollo/client\";\nimport { SAVE_BOOK } from \"../utils/mutations\";\n\nconst SearchBooks = () => {\n  const [searchedBooks, setSearchedBooks] = useState([]);\n  const [searchInput, setSearchInput] = useState(\"\");\n  const [savedBookIds, setSavedBookIds] = useState(getSavedBookIds());\n  const [saveBook] = useMutation(SAVE_BOOK);\n\n  useEffect(() => {\n    return () => saveBookIds(savedBookIds);\n  });\n\n  const handleFormSubmit = async (event) => {\n    event.preventDefault();\n\n    if (!searchInput) {\n      return false;\n    }\n\n    try {\n      const response = await fetch(\n        `https://www.googleapis.com/books/v1/volumes?q=${searchInput}`\n      );\n\n      if (!response.ok) {\n        throw new Error(\"something went wrong!\");\n      }\n\n      const { items } = await response.json();\n      console.log(items);\n      const bookData = items.map((book) => ({\n        bookId: book.id,\n        authors: book.volumeInfo.authors || [\"No author to display\"],\n        title: book.volumeInfo.title,\n        description: book.volumeInfo.description,\n        image: book.volumeInfo.imageLinks?.thumbnail || \"\",\n        link: book.volumeInfo.infoLink,\n      }));\n      console.log(bookData);\n\n      setSearchedBooks(bookData);\n      setSearchInput(\"\");\n    } catch (err) {\n      console.error(err);\n    }\n  };\n\n  const handleSaveBook = async (bookId) => {\n    const bookToSave = searchedBooks.find((book) => book.bookId === bookId);\n\n    const token = Auth.loggedIn() ? Auth.getToken() : null;\n\n    if (!token) {\n      return false;\n    }\n\n    try {\n      await saveBook({\n        variables: { newBook: { ...bookToSave } },\n      });\n\n      setSavedBookIds([...savedBookIds, bookToSave.bookId]);\n    } catch (err) {\n      console.error(err);\n    }\n  };\n\n  return (\n    <>\n      <Jumbotron fluid className=\"text-light bg-dark\">\n        <Container>\n          <h1>Search for Books!</h1>\n          <Form onSubmit={handleFormSubmit}>\n            <Form.Row>\n              <Col xs={12} md={8}>\n                <Form.Control\n                  name=\"searchInput\"\n                  value={searchInput}\n                  onChange={(e) => setSearchInput(e.target.value)}\n                  type=\"text\"\n                  size=\"lg\"\n                  placeholder=\"Search for a book\"\n                />\n              </Col>\n              <Col xs={12} md={4}>\n                <Button type=\"submit\" variant=\"success\" size=\"lg\">\n                  Submit Search\n                </Button>\n              </Col>\n            </Form.Row>\n          </Form>\n        </Container>\n      </Jumbotron>\n\n      <Container>\n        <h2>\n          {searchedBooks.length\n            ? `Viewing ${searchedBooks.length} results:`\n            : \"Search for a book to begin\"}\n        </h2>\n        <CardColumns>\n          {searchedBooks.map((book) => {\n            const disabled = savedBookIds?.some(\n              (savedBookId) => savedBookId === book.bookId\n            );\n            let buttonText = \"\";\n\n            if (disabled) {\n              buttonText = \"You have saved this book!\";\n            } else {\n              buttonText = \"Save this Book!\";\n            }\n\n            return (\n              <Card key={book.bookId} border=\"dark\">\n                {book.image ? (\n                  <Card.Img\n                    src={book.image}\n                    alt={`The cover for ${book.title}`}\n                    variant=\"top\"\n                  />\n                ) : null}\n                <Card.Body>\n                  <Card.Title>{book.title}</Card.Title>\n                  <p className=\"small\">Authors: {book.authors}</p>\n                  <Card.Text>\n                    {book.description}\n                    {book.link && (\n                      <p>\n                        <a\n                          href={book.link}\n                          target=\"_blank\"\n                          rel=\"noopener noreferrer\"\n                        >\n                          View on Google Books\n                        </a>\n                      </p>\n                    )}\n                  </Card.Text>\n                  {Auth.loggedIn() && (\n                    <Button\n                      disabled={disabled}\n                      className=\"btn-block btn-info\"\n                      onClick={() => handleSaveBook(book.bookId)}\n                    >\n                      {buttonText}\n                    </Button>\n                  )}\n                </Card.Body>\n              </Card>\n            );\n          })}\n        </CardColumns>\n      </Container>\n    </>\n  );\n};\n\nexport default SearchBooks;\n","// setup for React and Apollo Client\r\nimport { gql } from '@apollo/client';\r\n\r\n\r\nexport const GET_ME = gql`\r\n  {\r\n    theUser {\r\n      _id\r\n      username\r\n      email\r\n      bookCount\r\n      savedBooks {\r\n        bookId\r\n        authors\r\n        description\r\n        title\r\n        image\r\n        link\r\n      }\r\n    }\r\n  }\r\n`;\r\n","import React from \"react\";\nimport {\n  Jumbotron,\n  Container,\n  CardColumns,\n  Card,\n  Button,\n} from \"react-bootstrap\";\nimport Auth from \"../utils/auth\";\nimport { removeBookId } from \"../utils/localStorage\";\nimport { useQuery, useMutation } from \"@apollo/client\";\nimport { REMOVE_BOOK } from \"../utils/mutations\";\nimport { GET_ME } from \"../utils/queries\";\n\nconst SavedBooks = () => {\n  const { loading, data } = useQuery(GET_ME);\n  const [removeBook, { error }] = useMutation(REMOVE_BOOK);\n\n  const userData = data?.theUser || {};\n\n  const handleDeleteBook = async (bookId) => {\n    const token = Auth.loggedIn() ? Auth.getToken() : null;\n\n    if (!token) {\n      return false;\n    }\n\n    try {\n      const response = await removeBook({ variables: { bookId } });\n      console.log(\"Deleted record: \", response);\n\n      if (error) {\n        console.log(error);\n      }\n\n      removeBookId(bookId); // also remove from Localstorage\n    } catch (err) {\n      console.error(err);\n    }\n  };\n\n  // Display loading message if data isn't available yet\n  if (loading) {\n    return <h2>LOADING...</h2>;\n  } else {\n    return (\n      <>\n        <Jumbotron fluid className=\"text-light bg-dark\">\n          <Container>\n            <h1>Viewing saved books!</h1>\n          </Container>\n        </Jumbotron>\n        <Container>\n          <h2>\n            {userData.savedBooks.length\n              ? `Viewing ${userData.savedBooks.length} saved ${\n                  userData.savedBooks.length === 1 ? \"book\" : \"books\"\n                }:`\n              : \"You have no saved books!\"}\n          </h2>\n          <CardColumns>\n            {userData.savedBooks.map((book) => (\n              <Card key={book.bookId} border=\"dark\">\n                {book.image ? (\n                  <Card.Img\n                    src={book.image}\n                    alt={`The cover for ${book.title}`}\n                    variant=\"top\"\n                  />\n                ) : null}\n                <Card.Body>\n                  <Card.Title>{book.title}</Card.Title>\n                  <p className=\"small\">Authors: {book.authors}</p>\n                  <Card.Text>{book.description}</Card.Text>\n                  <Button\n                    className=\"btn-block btn-danger\"\n                    onClick={() => handleDeleteBook(book.bookId)}\n                  >\n                    Delete this Book!\n                  </Button>\n                </Card.Body>\n              </Card>\n            ))}\n          </CardColumns>\n        </Container>\n      </>\n    );\n  }\n};\n\nexport default SavedBooks;\n","import React, { useState } from \"react\";\nimport { Form, Button, Alert } from \"react-bootstrap\";\n\nimport Auth from \"../utils/auth\";\n\nimport { useMutation } from \"@apollo/client\";\nimport { ADD_USER } from \"../utils/mutations\";\nconst SignupForm = () => {\n  // set initial form state\n  const [userFormData, setUserFormData] = useState({\n    username: \"\",\n    email: \"\",\n    password: \"\",\n  });\n  // set state for form validation\n  const [validated] = useState(false);\n  // set state for alert\n  const [showAlert, setShowAlert] = useState(false);\n\n  // add user\n  const [addUser] = useMutation(ADD_USER);\n\n  const handleInputChange = (event) => {\n    const { name, value } = event.target;\n    setUserFormData({ ...userFormData, [name]: value });\n  };\n\n  const handleFormSubmit = async (event) => {\n    event.preventDefault();\n\n    // check if form has everything (as per react-bootstrap docs)\n    const form = event.currentTarget;\n    if (form.checkValidity() === false) {\n      event.preventDefault();\n      event.stopPropagation();\n    }\n\n    try {\n      const { data } = await addUser({\n        variables: { ...userFormData },\n      });\n\n      const { token, user } = data.addUser;\n      console.log(user);\n      Auth.login(token);\n    } catch (err) {\n      console.error(err);\n      setShowAlert(true);\n    }\n\n    setUserFormData({\n      username: \"\",\n      email: \"\",\n      password: \"\",\n    });\n  };\n\n  return (\n    <>\n      {/* This is needed for the validation functionality above */}\n      <Form noValidate validated={validated} onSubmit={handleFormSubmit}>\n        {/* show alert if server response is bad */}\n        <Alert\n          dismissible\n          onClose={() => setShowAlert(false)}\n          show={showAlert}\n          variant=\"danger\"\n        >\n          Something went wrong with your signup!\n        </Alert>\n\n        <Form.Group>\n          <Form.Label htmlFor=\"username\">Username</Form.Label>\n          <Form.Control\n            type=\"text\"\n            placeholder=\"Your username\"\n            name=\"username\"\n            onChange={handleInputChange}\n            value={userFormData.username}\n            required\n          />\n          <Form.Control.Feedback type=\"invalid\">\n            Username is required!\n          </Form.Control.Feedback>\n        </Form.Group>\n\n        <Form.Group>\n          <Form.Label htmlFor=\"email\">Email</Form.Label>\n          <Form.Control\n            type=\"email\"\n            placeholder=\"Your email address\"\n            name=\"email\"\n            onChange={handleInputChange}\n            value={userFormData.email}\n            required\n          />\n          <Form.Control.Feedback type=\"invalid\">\n            Email is required!\n          </Form.Control.Feedback>\n        </Form.Group>\n\n        <Form.Group>\n          <Form.Label htmlFor=\"password\">Password</Form.Label>\n          <Form.Control\n            type=\"password\"\n            placeholder=\"Your password\"\n            name=\"password\"\n            onChange={handleInputChange}\n            value={userFormData.password}\n            required\n          />\n          <Form.Control.Feedback type=\"invalid\">\n            Password is required!\n          </Form.Control.Feedback>\n        </Form.Group>\n        <Button\n          disabled={\n            !(\n              userFormData.username &&\n              userFormData.email &&\n              userFormData.password\n            )\n          }\n          type=\"submit\"\n          variant=\"success\"\n        >\n          Submit\n        </Button>\n      </Form>\n    </>\n  );\n};\n\nexport default SignupForm;\n","// see SignupForm.js for comments\nimport React, { useState, useEffect } from \"react\";\nimport { Form, Button, Alert } from \"react-bootstrap\";\nimport { useMutation } from \"@apollo/client\";\nimport { LOGIN_USER } from \"../utils/mutations\";\nimport Auth from \"../utils/auth\";\n\nconst LoginForm = () => {\n  const [userFormData, setUserFormData] = useState({ email: \"\", password: \"\" });\n  const [validated] = useState(false);\n  const [showAlert, setShowAlert] = useState(false);\n  const [loginUser, { error }] = useMutation(LOGIN_USER);\n  useEffect(() => {\n    if (error) {\n      setShowAlert(true);\n    } else {\n      setShowAlert(false);\n    }\n  }, [error]);\n\n  const handleInputChange = (event) => {\n    const { name, value } = event.target;\n    setUserFormData({ ...userFormData, [name]: value });\n  };\n\n  const handleFormSubmit = async (event) => {\n    event.preventDefault();\n\n    // check if form has everything (as per react-bootstrap docs)\n    const form = event.currentTarget;\n    if (form.checkValidity() === false) {\n      event.preventDefault();\n      event.stopPropagation();\n    }\n\n    try {\n      const { data } = await loginUser({\n        variables: { ...userFormData },\n      });\n\n      const { token, user } = await data.login;\n      console.log(user);\n      Auth.login(token);\n    } catch (err) {\n      console.error(err);\n      setShowAlert(true);\n    }\n\n    setUserFormData({\n      username: \"\",\n      email: \"\",\n      password: \"\",\n    });\n  };\n\n  return (\n    <>\n      <Form noValidate validated={validated} onSubmit={handleFormSubmit}>\n        <Alert\n          dismissible\n          onClose={() => setShowAlert(false)}\n          show={showAlert}\n          variant=\"danger\"\n        >\n          Something went wrong with your login credentials!\n        </Alert>\n        <Form.Group>\n          <Form.Label htmlFor=\"email\">Email</Form.Label>\n          <Form.Control\n            type=\"text\"\n            placeholder=\"Your email\"\n            name=\"email\"\n            onChange={handleInputChange}\n            value={userFormData.email}\n            required\n          />\n          <Form.Control.Feedback type=\"invalid\">\n            Email is required!\n          </Form.Control.Feedback>\n        </Form.Group>\n\n        <Form.Group>\n          <Form.Label htmlFor=\"password\">Password</Form.Label>\n          <Form.Control\n            type=\"password\"\n            placeholder=\"Your password\"\n            name=\"password\"\n            onChange={handleInputChange}\n            value={userFormData.password}\n            required\n          />\n          <Form.Control.Feedback type=\"invalid\">\n            Password is required!\n          </Form.Control.Feedback>\n        </Form.Group>\n        <Button\n          disabled={!(userFormData.email && userFormData.password)}\n          type=\"submit\"\n          variant=\"success\"\n        >\n          Submit\n        </Button>\n      </Form>\n    </>\n  );\n};\n\nexport default LoginForm;\n","import React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Navbar, Nav, Container, Modal, Tab } from 'react-bootstrap';\nimport SignUpForm from './SignupForm';\nimport LoginForm from './LoginForm';\n\nimport Auth from '../utils/auth';\n\nconst AppNavbar = () => {\n  // set modal display state\n  const [showModal, setShowModal] = useState(false);\n\n  return (\n    <>\n      <Navbar bg='dark' variant='dark' expand='lg'>\n        <Container fluid>\n          <Navbar.Brand as={Link} to='/'>\n            Google Books Search\n          </Navbar.Brand>\n          <Navbar.Toggle aria-controls='navbar' />\n          <Navbar.Collapse id='navbar'>\n            <Nav className='ml-auto'>\n              <Nav.Link as={Link} to='/'>\n                Search For Books\n              </Nav.Link>\n              {/* if user is logged in show saved books and logout */}\n              {Auth.loggedIn() ? (\n                <>\n                  <Nav.Link as={Link} to='/saved'>\n                    See Your Books\n                  </Nav.Link>\n                  <Nav.Link onClick={Auth.logout}>Logout</Nav.Link>\n                </>\n              ) : (\n                <Nav.Link onClick={() => setShowModal(true)}>Login/Sign Up</Nav.Link>\n              )}\n            </Nav>\n          </Navbar.Collapse>\n        </Container>\n      </Navbar>\n      {/* set modal data up */}\n      <Modal\n        size='lg'\n        show={showModal}\n        onHide={() => setShowModal(false)}\n        aria-labelledby='signup-modal'>\n        {/* tab container to do either signup or login component */}\n        <Tab.Container defaultActiveKey='login'>\n          <Modal.Header closeButton>\n            <Modal.Title id='signup-modal'>\n              <Nav variant='pills'>\n                <Nav.Item>\n                  <Nav.Link eventKey='login'>Login</Nav.Link>\n                </Nav.Item>\n                <Nav.Item>\n                  <Nav.Link eventKey='signup'>Sign Up</Nav.Link>\n                </Nav.Item>\n              </Nav>\n            </Modal.Title>\n          </Modal.Header>\n          <Modal.Body>\n            <Tab.Content>\n              <Tab.Pane eventKey='login'>\n                <LoginForm handleModalClose={() => setShowModal(false)} />\n              </Tab.Pane>\n              <Tab.Pane eventKey='signup'>\n                <SignUpForm handleModalClose={() => setShowModal(false)} />\n              </Tab.Pane>\n            </Tab.Content>\n          </Modal.Body>\n        </Tab.Container>\n      </Modal>\n    </>\n  );\n};\n\nexport default AppNavbar;\n","import React from \"react\";\nimport { BrowserRouter as Router, Routes, Route } from \"react-router-dom\";\nimport SearchBooks from \"./pages/SearchBooks\";\nimport SavedBooks from \"./pages/SavedBooks\";\nimport Navbar from \"./components/Navbar\";\n\nimport {\n  ApolloProvider,\n  ApolloClient,\n  InMemoryCache,\n  createHttpLink,\n} from \"@apollo/client\";\nimport { setContext } from \"@apollo/client/link/context\";\n\nconst httpLink = createHttpLink({\n  uri: \"/graphql\", // Update the URL here\n});\nconst authLink = setContext((_, { headers }) => {\n  const token = localStorage.getItem(\"id_token\");\n  return {\n    headers: {\n      ...headers,\n      authorization: token ? `Bearer ${token}` : \"\",\n    },\n  };\n});\n\nconst client = new ApolloClient({\n  link: authLink.concat(httpLink),\n  cache: new InMemoryCache(),\n});\n\nfunction App() {\n  return (\n    <ApolloProvider client={client}>\n      <Router>\n        <>\n          <Navbar />\n          <Routes>\n            <Route path=\"/\" element={<SearchBooks />} />\n            <Route path=\"/saved\" element={<SavedBooks />} />\n            <Route\n              path=\"*\"\n              element={<h1 className=\"display-2\">Wrong page!</h1>}\n            />\n          </Routes>\n        </>\n      </Router>\n    </ApolloProvider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}